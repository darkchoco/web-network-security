{
	"info": {
		"_postman_id": "4ad43632-afc8-4342-9b80-5d26ace422e9",
		"name": "Postman Essential Training",
		"description": "- [Contact List Documentation for LinkedIn Learning](https://documenter.getpostman.com/view/4012288/2s8YRiKDbu)\n    \n    - [https://documenter.getpostman.com/view/4012288/TzK2bEa8](https://documenter.getpostman.com/view/4012288/TzK2bEa8) 는 Heroku app에서 링크된 내용인데 위 내용과 같은 것 같다.\n        \n- [[LinkedIn] Postman Essential Training](http://redmine.cloudscape.kr/issues/946) (Redmine #946)\n    \n- Wiki 링크는 여기에.",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Basic Endpoint Tests",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fc029687-4ee1-4994-a49e-2eb2e03aff2f",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.environment.set(\"token\", jsonData.token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "9fcc89cd-c896-4fc9-831f-98cbcb41b75a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test@abcde.com\",\r\n    \"password\": \"1234567\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://thinking-tester-contact-list.herokuapp.com/users/login",
						"description": "이를 먼저 실행해서 JWT를 받아야 한다."
					},
					"response": []
				},
				{
					"name": "Get Contact List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "71171573-9512-4495-b2b8-ef5a1bd18ade",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response content type is application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "4cf011b8-680b-4a14-8615-27720146ab03",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/contacts"
					},
					"response": []
				},
				{
					"name": "Get Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2b20aca8-370f-45e3-875f-b1b322c7ce69",
								"exec": [
									"pm.test(\"Correct content is returned\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"foo@bar.com\");\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Correct first name is returned\", function () {\r",
									"    pm.expect(jsonData.firstName).to.eql(environment.firstName);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct last name is returned\", function () {\r",
									"    pm.expect(jsonData.lastName).to.eql(environment.lastName);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "3f96e993-634e-4daf-b92c-c5206d71b8c1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2N2NlZjIwZDMyZWFmNzAwMTM3YTRkMmEiLCJpYXQiOjE3NDE2MTY4NzB9.p9wOX9HKUG09Xf5zW6jeNTlip7k8bUYq42XqQ4bT_dM"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/contacts/{{contactId}}"
					},
					"response": []
				},
				{
					"name": "Add Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "29da173e-38e7-4739-afbd-16b83de65606",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.environment.set('contactId', jsonData._id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "bcc62947-51d5-4214-8970-b3b061911675",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2N2NlZjIwZDMyZWFmNzAwMTM3YTRkMmEiLCJpYXQiOjE3NDE2MTY4NzB9.p9wOX9HKUG09Xf5zW6jeNTlip7k8bUYq42XqQ4bT_dM"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"{{firstName}}\",\r\n    \"lastName\": \"{{lastName}}\",\r\n    \"birthdate\": \"2000-01-01\",\r\n    \"email\": \"foo@bar.com\",\r\n    \"phone\": \"8005555555\",\r\n    \"street1\": \"1 Main St.\",\r\n    \"street2\": \"Apartment A\",\r\n    \"city\": \"Anytown\",\r\n    \"stateProvince\": \"KS\",\r\n    \"postalCode\": \"12345\",\r\n    \"country\": \"USA\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/contacts"
					},
					"response": []
				},
				{
					"name": "Update Contact",
					"id": "d39c9986-e20f-499b-83f0-54094fe55b01",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2N2NlZjIwZDMyZWFmNzAwMTM3YTRkMmEiLCJpYXQiOjE3NDE2MTY4NzB9.p9wOX9HKUG09Xf5zW6jeNTlip7k8bUYq42XqQ4bT_dM"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"birthdate\": \"1970-01-01\",\r\n    \"email\": \"jdoe@fake.com\",\r\n    \"phone\": \"8005555555\",\r\n    \"street1\": \"1 Main St.\",\r\n    \"street2\": \"Apartment A\",\r\n    \"city\": \"Anytown\",\r\n    \"stateProvince\": \"KS\",\r\n    \"postalCode\": \"12345\",\r\n    \"country\": \"USA\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/contacts/{{contactId}}"
					},
					"response": []
				},
				{
					"name": "Delete Contact",
					"id": "07610da3-5ff2-45eb-b377-9d88a5db8a6f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2N2NlZjIwZDMyZWFmNzAwMTM3YTRkMmEiLCJpYXQiOjE3NDE2MTY4NzB9.p9wOX9HKUG09Xf5zW6jeNTlip7k8bUYq42XqQ4bT_dM"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "{{base_url}}/contacts/{{contactId}}"
					},
					"response": []
				}
			],
			"id": "dd57adf7-e6e4-4b4c-9e99-19d16f9d684d"
		},
		{
			"name": "Negative Tests",
			"item": [
				{
					"name": "Setup - Add Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "29da173e-38e7-4739-afbd-16b83de65606",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.environment.set('contactId', jsonData._id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "b95c59a4-e866-453a-ad6f-e4dbf94a115f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2N2NlZjIwZDMyZWFmNzAwMTM3YTRkMmEiLCJpYXQiOjE3NDE2MTY4NzB9.p9wOX9HKUG09Xf5zW6jeNTlip7k8bUYq42XqQ4bT_dM"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"{{firstName}}\",\r\n    \"lastName\": \"{{lastName}}\",\r\n    \"birthdate\": \"2000-01-01\",\r\n    \"email\": \"foo@bar.com\",\r\n    \"phone\": \"8005555555\",\r\n    \"street1\": \"1 Main St.\",\r\n    \"street2\": \"Apartment A\",\r\n    \"city\": \"Anytown\",\r\n    \"stateProvince\": \"KS\",\r\n    \"postalCode\": \"12345\",\r\n    \"country\": \"USA\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/contacts"
					},
					"response": []
				},
				{
					"name": "Get Contact List - Unauthorized",
					"id": "098f5140-a59c-4919-916e-de3f2b57e317",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": ""
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/contacts"
					},
					"response": []
				},
				{
					"name": "Get Contact - Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bc2290a0-a37e-4f69-a78e-133d1b69b2e8",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "76c47f55-16db-4202-a4bc-5c014ecb1a1c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2N2NlZjIwZDMyZWFmNzAwMTM3YTRkMmEiLCJpYXQiOjE3NDE2MTY4NzB9.p9wOX9HKUG09Xf5zW6jeNTlip7k8bUYq42XqQ4bT_dM"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/contacts/67cef27032eaf700137a4d39"
					},
					"response": []
				},
				{
					"name": "Add Contact - Missing required field",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "350605e2-c536-455c-a874-64b48306c5f0",
								"exec": [
									"pm.test(\"Missing First Name error message is returned\", function () {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.errors.firstName).to.have.property(\"message\", \"Path `firstName` is required.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "49f7399f-e8c4-4732-970f-1ed892e49ad6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2N2NlZjIwZDMyZWFmNzAwMTM3YTRkMmEiLCJpYXQiOjE3NDE2MTY4NzB9.p9wOX9HKUG09Xf5zW6jeNTlip7k8bUYq42XqQ4bT_dM"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"\",\r\n    \"lastName\": \"Doe\",\r\n    \"birthdate\": \"1970-01-01\",\r\n    \"email\": \"jdoe@fake.com\",\r\n    \"phone\": \"8005555555\",\r\n    \"street1\": \"1 Main St.\",\r\n    \"street2\": \"Apartment A\",\r\n    \"city\": \"Anytown\",\r\n    \"stateProvince\": \"KS\",\r\n    \"postalCode\": \"12345\",\r\n    \"country\": \"USA\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/contacts"
					},
					"response": []
				},
				{
					"name": "Add Contact - Last Name too long",
					"id": "4e03b5d1-9ade-4531-b6aa-106a28ad7293",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2N2NlZjIwZDMyZWFmNzAwMTM3YTRkMmEiLCJpYXQiOjE3NDE2MTY4NzB9.p9wOX9HKUG09Xf5zW6jeNTlip7k8bUYq42XqQ4bT_dM"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Bernd\",\r\n    \"lastName\": \"Ottovordemgentschenfelde\",\r\n    \"birthdate\": \"1970-01-01\",\r\n    \"email\": \"jdoe@fake.com\",\r\n    \"phone\": \"8005555555\",\r\n    \"street1\": \"1 Main St.\",\r\n    \"street2\": \"Apartment A\",\r\n    \"city\": \"Anytown\",\r\n    \"stateProvince\": \"KS\",\r\n    \"postalCode\": \"12345\",\r\n    \"country\": \"USA\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/contacts"
					},
					"response": []
				},
				{
					"name": "Add Contact - Too young",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8319903b-f56f-4f21-a5cb-a3b14fe1845d",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"\r",
									"// Test for error message structure\r",
									"pm.test(\"Response has expected error structure\", function () {\r",
									"    pm.expect(response).to.have.property(\"errors\");\r",
									"    pm.expect(response).to.have.property(\"_message\");\r",
									"    pm.expect(response).to.have.property(\"message\");\r",
									"});\r",
									"\r",
									"// Test for specific error details in the response\r",
									"pm.test(\"Error details for phone field are present\", function () {\r",
									"    pm.expect(response.errors).to.have.property(\"phone\");\r",
									"    const phoneError = response.errors.phone;\r",
									"    pm.expect(phoneError).to.have.property(\"name\");\r",
									"    pm.expect(phoneError).to.have.property(\"message\");\r",
									"    pm.expect(phoneError).to.have.property(\"properties\");\r",
									"});\r",
									"\r",
									"// Test for phone error properties\r",
									"pm.test(\"Phone error properties are correctly defined\", function () {\r",
									"    const phoneError = response.errors.phone.properties;\r",
									"    pm.expect(phoneError).to.have.property(\"message\", \"Phone number is invalid\");\r",
									"    pm.expect(phoneError).to.have.property(\"type\", \"user defined\");\r",
									"    pm.expect(phoneError).to.have.property(\"path\", \"phone\");\r",
									"    pm.expect(phoneError).to.have.property(\"value\", \"\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "1f40c6c0-a8ed-477d-b2ee-0269e163a122",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2N2NlZjIwZDMyZWFmNzAwMTM3YTRkMmEiLCJpYXQiOjE3NDE2MTY4NzB9.p9wOX9HKUG09Xf5zW6jeNTlip7k8bUYq42XqQ4bT_dM"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"杏奈\",\r\n    \"lastName\": \"加美\",\r\n    \"birthdate\": \"1996-09-01\",\r\n    \"email\": \"ka@yahoo.com\",\r\n    \"phone\": \"\",\r\n    \"street1\": \"1 Main St.\",\r\n    \"street2\": \"Apartment A\",\r\n    \"city\": \"Anytown\",\r\n    \"stateProvince\": \"KS\",\r\n    \"postalCode\": \"12345\",\r\n    \"country\": \"USA\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/contacts"
					},
					"response": []
				},
				{
					"name": "Update Contact - Invalid Email",
					"id": "2cfa8597-548a-46f4-a308-0b01897f7dd9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2N2NlZjIwZDMyZWFmNzAwMTM3YTRkMmEiLCJpYXQiOjE3NDE2MTY4NzB9.p9wOX9HKUG09Xf5zW6jeNTlip7k8bUYq42XqQ4bT_dM"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"birthdate\": \"1970-01-01\",\r\n    \"email\": \"jdoe@@@@@fake.com\",\r\n    \"phone\": \"8005555555\",\r\n    \"street1\": \"1 Main St.\",\r\n    \"street2\": \"Apartment A\",\r\n    \"city\": \"Anytown\",\r\n    \"stateProvince\": \"KS\",\r\n    \"postalCode\": \"12345\",\r\n    \"country\": \"USA\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/contacts/67cf03b232eaf700137a57b1"
					},
					"response": []
				},
				{
					"name": "Cleanup - Delete Contact",
					"id": "13815e3b-4c8b-4882-a958-a7fb9ff5d162",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2N2NlZjIwZDMyZWFmNzAwMTM3YTRkMmEiLCJpYXQiOjE3NDE2MTY4NzB9.p9wOX9HKUG09Xf5zW6jeNTlip7k8bUYq42XqQ4bT_dM"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "{{base_url}}/contacts/{{contactId}}"
					},
					"response": []
				}
			],
			"id": "c3ff026b-22d8-403c-8d49-3335d2cb1bd5"
		},
		{
			"name": "Address API",
			"item": [
				{
					"name": "Get Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f3c29cb8-3ca0-42f5-bab8-8a5ac518a153",
								"exec": [
									"pm.test(\"Correct city is returned\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.address.city).to.eql(\"Belmont\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "83bf7995-7abe-41c0-ab90-83d845ca74d9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "https://25536437-5c33-435a-a284-efd3f231bc7d.mock.pstmn.io/getAddress/1"
					},
					"response": [
						{
							"id": "f615a2ba-c1cb-451d-9114-30bd068131a5",
							"name": "Get Address",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "https://25536437-5c33-435a-a284-efd3f231bc7d.mock.pstmn.io/getAddress/1"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"businessId\": 1,\n    \"name\": \"Amalgamated Steel\",\n    \"address\": {\n        \"street\": \"123 Main St.\",\n        \"city\": \"Belmont\",\n        \"state\": \"MA\",\n        \"postalCode\": \"01734\"\n    }\n}"
						}
					]
				}
			],
			"id": "43f90278-b2ab-48ff-8b6e-60e4bf854f39"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "3778f2ad-059f-4e3e-ba41-c8bf738cecf5",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "bfb9b92b-6867-4b9f-8e78-bb6eabb1bd7f",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.test(\"Response time is less than 1500ms\", function () {\r",
					"    pm.expect(pm.response.responseTime).to.be.below(1500);\r",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://thinking-tester-contact-list.herokuapp.com"
		}
	]
}